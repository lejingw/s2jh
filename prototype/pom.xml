<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>lab.s2jh</groupId>
		<artifactId>s2jh-parent</artifactId>
		<version>1.0.0</version>
		<relativePath>..</relativePath>
	</parent>
	<artifactId>prototype</artifactId>
	<packaging>war</packaging>
	<name>s2jh :: prototype</name>

	<properties>
		<deploy.env>production</deploy.env>
	</properties>

	<dependencies>
		<dependency>
			<groupId>lab.s2jh</groupId>
			<artifactId>assets-resource</artifactId>
			<version>${s2jh.version}</version>
		</dependency>
		<dependency>
			<groupId>lab.s2jh</groupId>
			<artifactId>core-service</artifactId>
			<version>${s2jh.version}</version>
		</dependency>
		<dependency>
			<groupId>lab.s2jh</groupId>
			<artifactId>core-service</artifactId>
			<classifier>tests</classifier>
			<scope>test</scope>
			<version>${s2jh.version}</version>
		</dependency>
		<dependency>
			<groupId>lab.s2jh</groupId>
			<artifactId>common-service</artifactId>
			<version>${s2jh.version}</version>
		</dependency>
		<dependency>
			<groupId>lab.s2jh</groupId>
			<artifactId>bpm-service</artifactId>
			<version>${s2jh.version}</version>
		</dependency>
		<!-- 在需要中文字体支持/条码等特性必要时再引入JasperReport扩展以降低依赖jar整体文件数量和大小 -->
		<dependency>
			<groupId>lab.s2jh</groupId>
			<artifactId>jasperreports-extension</artifactId>
			<version>${s2jh.version}</version>
		</dependency>
		<dependency>
			<groupId>lab.s2jh</groupId>
			<artifactId>project-tools</artifactId>
			<version>${s2jh.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- Oracle JDBC Driver Demo <dependency> <groupId>com.oracle</groupId> 
			<artifactId>ojdbc6</artifactId> <scope>runtime</scope> </dependency> -->

		<!-- j2ee web spec -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
		</dependency>
		<!-- WEB end -->

		<!-- TEST begin -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-remote-driver</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- TEST end -->

		<!-- For standard running package -->
		<dependency>
			<groupId>org.eclipse.jetty.aggregate</groupId>
			<artifactId>jetty-webapp</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-jsp</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>generator</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<phase>compile</phase>
								<goals>
									<goal>java</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<classpathScope>compile</classpathScope>
							<mainClass>lab.s2jh.tool.builder.SourceCodeFrameworkBuilder</mainClass>
							<arguments>
								<argument>./generator/</argument>
							</arguments>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>standalone</id>
			<properties>
				<deploy.env>standalone</deploy.env>
				<maven.build.timestamp.format>yyyy-MM-dd_HH:mm:ss</maven.build.timestamp.format>
				<BUILD_ID>${maven.build.timestamp}</BUILD_ID>
			</properties>
			<build>
				<resources>
					<resource>
						<filtering>false</filtering>
						<directory>src/main/java</directory>
						<excludes>
							<exclude>**/*.java</exclude>
						</excludes>
					</resource>
					<resource>
						<filtering>false</filtering>
						<directory>src/main/resources</directory>
					</resource>
					<resource>
						<filtering>false</filtering>
						<directory>src/main/deploy/${deploy.env}/resources</directory>
					</resource>
				</resources>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.4</version>
						<configuration>
							<archive>
								<manifestEntries>
									<Svn-Revision>${SVN_REVISION}</Svn-Revision>
									<Build-Tag>${BUILD_TAG}</Build-Tag>
									<Build-Number>${BUILD_NUMBER}</Build-Number>
									<Build-Id>${BUILD_ID}</Build-Id>
								</manifestEntries>
							</archive>
							<webResources>
								<resource>
									<directory>src/main/filter</directory>
									<filtering>true</filtering>
								</resource>
								<resource>
									<directory>src/main/deploy/${deploy.env}/webResources</directory>
									<filtering>false</filtering>
								</resource>
							</webResources>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>2.8</version>
						<executions>
							<execution>
								<id>copy-dependencies</id>
								<phase>package</phase>
								<goals>
									<goal>copy-dependencies</goal>
								</goals>
								<configuration>
									<includeScope>runtime</includeScope>
									<outputDirectory>./runtime/lib</outputDirectory>
									<!-- 排除几个不常变化的依赖，减少增量提交更新的文件大小 -->
									<excludeArtifactIds>assets-resource,jasperreports-extension,project-tools,core-service,common-service,bpm-service,jdtcore,org.eclipse.jdt.core,jetty-webapp,jetty-jsp,com.sun.el,javax.el,javax.servlet.jsp.jstl,javax.servlet.jsp,javax.servlet,servlet-api,jsp-api,org.apache.jasper.glassfish,org.apache.taglibs.standard.glassfish</excludeArtifactIds>
									<!-- 排除经常变化的依赖和独立运行相关依赖 <excludeArtifactIds>core-service,common-service,bpm-service,jdtcore,org.eclipse.jdt.core,jetty-webapp,jetty-jsp,com.sun.el,javax.el,javax.servlet.jsp.jstl,javax.servlet.jsp,javax.servlet,servlet-api,jsp-api,org.apache.jasper.glassfish,org.apache.taglibs.standard.glassfish</excludeArtifactIds> -->
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>2.4</version>
						<executions>
							<!-- 完整独立运行包构建 -->
							<execution>
								<id>assembly-standalone</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<finalName>${project.artifactId}</finalName>
									<descriptors>
										<descriptor>assembly/assembly-standalone.xml</descriptor>
									</descriptors>
									<archive>
										<manifest>
											<mainClass>lab.s2jh.MainExecutor</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
							<!-- 如果Jetty版本有更新则重新构建 <execution> <id>assembly-jetty</id> <phase>package</phase> 
								<goals> <goal>single</goal> </goals> <configuration> <finalName>${project.artifactId}</finalName> 
								<descriptors> <descriptor>assembly/assembly-jetty.xml</descriptor> </descriptors> 
								<outputDirectory>./runtime</outputDirectory> </configuration> </execution> -->
							<!-- 增量更新包构建 <execution> <id>assembly-simplified</id> <phase>package</phase> 
								<goals> <goal>single</goal> </goals> <configuration> <finalName>${project.artifactId}</finalName> 
								<descriptors> <descriptor>assembly/assembly-simplified.xml</descriptor> </descriptors> 
								<archive> <manifest> <mainClass>lab.s2jh.MainExecutor</mainClass> </manifest> 
								<manifestEntries> <Class-Path>prototype-jetty.jar</Class-Path> </manifestEntries> 
								</archive> <outputDirectory>./runtime</outputDirectory> </configuration> 
								</execution> -->
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
