<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:cache="http://www.springframework.org/schema/cache" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xmlns:jee="http://www.springframework.org/schema/jee" xmlns:task="http://www.springframework.org/schema/task"
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd"
    default-lazy-init="false">

    <description>Spring公共配置 </description>

    <!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
    <context:component-scan base-package="lab.s2jh.ctx,lab.s2jh.**.dao,lab.s2jh.**.service"
        scoped-proxy="targetClass">
    </context:component-scan>

    <!-- JPA Entity Manager 配置 -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
        </property>
        <property name="persistenceUnitPostProcessors" ref="persistenceUnitPostProcessors" />
        <property name="packagesToScan" value="lab.s2jh.core.audit.envers,lab.s2jh.**.entity" />
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.connection.autocommit">false</prop>
                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
                <prop key="hibernate.cache.region.factory_class">lab.s2jh.core.cache.SpringEhCacheRegionFactory</prop>
                <prop key="net.sf.ehcache.configurationResourceName">ehcache-config.xml</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>

                <prop key="hibernate.cache.use_query_cache">true</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.generate_statistics">true</prop>

                <!-- <prop key="javax.persistence.validation.mode">none</prop> <prop key="hibernate.validator.apply_to_ddl">false</prop> -->

                <prop key="hibernate.connection.SetBigStringTryClob">true</prop>

                <prop key="org.hibernate.envers.do_not_audit_optimistic_locking_field">false</prop>
                <prop key="org.hibernate.envers.global_with_modified_flag">true</prop>
            </props>
        </property>
    </bean>

    <bean id="persistenceUnitPostProcessors" class="lab.s2jh.core.dao.jpa.ExtPersistenceUnitPostProcessor" />

    <!-- Spring Data JPA配置 -->
    <jpa:repositories base-package="lab.s2jh.**.dao" transaction-manager-ref="transactionManager"
        entity-manager-factory-ref="entityManagerFactory" />

    <!-- JPA 事务配置 -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

    <!-- Spring Cache配置 -->
    <cache:annotation-driven />
    <!-- 与JPA Hibernate共享一个cacheManager -->
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
        <property name="cacheManager">
            <bean class="lab.s2jh.core.cache.SpringEhCacheRegionFactory" />
        </property>
    </bean>

    <task:scheduler id="springScheduler" pool-size="10" />
    <!-- 用于增强Spring @Async 注解在异步模式能捕捉到异常日志 -->
    <bean id="handlingAsyncTaskExecutor" class="lab.s2jh.core.context.async.HandlingAsyncTaskExecutor" />
    <!-- 建议只定义@Async注解使用，尽量不用@Scheduled而改用后面的Quartz方式便于文本定义调整定时策略 -->
    <task:annotation-driven executor="handlingAsyncTaskExecutor" scheduler="springScheduler" />

</beans>