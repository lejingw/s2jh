<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" version="3.0">
    <display-name>Prototype</display-name>
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
			classpath:/context/context-profiles.xml,classpath:/context/spring*.xml
		</param-value>
    </context-param>
    <context-param>
        <param-name>spring.profiles.default</param-name>
        <param-value>development</param-value>
    </context-param>

    <listener>
        <listener-class>lab.s2jh.core.web.listener.ApplicationContextPreListener</listener-class>
    </listener>
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <listener>
        <listener-class>lab.s2jh.core.web.listener.ApplicationContextPostListener</listener-class>
    </listener>
    <listener>
        <listener-class>org.activiti.rest.common.servlet.ActivitiServletContextListener</listener-class>
    </listener>
    <listener>
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
    </listener>
    <listener>
        <listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
    </listener>
    <listener>
        <listener-class>lab.s2jh.auth.security.AuthLogonHistRefreshListener</listener-class>
    </listener>

    <!-- jcaptcha验证码图片生成URL -->
    <servlet>
        <servlet-name>jcaptcha</servlet-name>
        <servlet-class>lab.s2jh.core.web.captcha.ImageCaptchaServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>jcaptcha</servlet-name>
        <url-pattern>/pub/jcaptcha.servlet</url-pattern>
    </servlet-mapping>

    <!-- JasperReport报表图片 -->
    <servlet>
        <servlet-name>imageServlet</servlet-name>
        <servlet-class>net.sf.jasperreports.j2ee.servlets.ImageServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>imageServlet</servlet-name>
        <url-pattern>/pub/jasper/images.servlet</url-pattern>
    </servlet-mapping>

    <!-- activiti restlet adapter -->
    <servlet>
        <servlet-name>ActivitiRestletServlet</servlet-name>
        <servlet-class>org.restlet.ext.servlet.ServerServlet</servlet-class>
        <init-param>
            <param-name>org.restlet.application</param-name>
            <param-value>org.activiti.rest.service.application.ActivitiRestServicesApplication</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>ActivitiRestletServlet</servlet-name>
        <url-pattern>/rest/activiti/*</url-pattern>
    </servlet-mapping>

    <filter>
        <filter-name>openEntityManagerInViewFilter</filter-name>
        <filter-class>org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>openEntityManagerInViewFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- Spring Security JCaptcha Filter -->
    <filter>
        <filter-name>JCaptchaFilter</filter-name>
        <filter-class>lab.s2jh.core.web.captcha.JCaptchaFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>JCaptchaFilter</filter-name>
        <url-pattern>/j_spring_security_check</url-pattern>
    </filter-mapping>

    <!-- Spring Security -->
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- 开发日志过滤器，需要放在springSecurityFilterChain之后以便获取登录用户信息 -->
    <filter>
        <filter-name>httpRequestLogFilter</filter-name>
        <filter-class>lab.s2jh.core.web.filter.HttpRequestLogFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>httpRequestLogFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>struts2</filter-name>
        <filter-class>lab.s2jh.core.web.filter.PostStrutsPrepareAndExecuteFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>struts2</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <session-config>
        <session-timeout>30</session-timeout>
    </session-config>
    <error-page>
        <error-code>500</error-code>
        <location>/common/errors.jsp</location>
    </error-page>

    <distributable />
</web-app>